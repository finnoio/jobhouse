version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # PostgreSQL connection
      POSTGRES_DB: jobs_meta
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      # MinIO connection
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
      MINIO_BUCKET: app-bucket
    depends_on:
      - postgres
      - minio
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: jobs_meta
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database schemas and users
#      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO bucket creation service
#  createbuckets:
#    image: minio/mc
#    depends_on:
#      - minio
#    entrypoint: >
#      /bin/sh -c "
#      sleep 10;
#      /usr/bin/mc alias set myminio http://minio:9000 minio_access_key minio_secret_key;
#      /usr/bin/mc mb myminio/app-bucket;
#      /usr/bin/mc policy set public myminio/app-bucket;
#      exit 0;
#      "
#    networks:
#      - app-network

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge